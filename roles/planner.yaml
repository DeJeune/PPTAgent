system_prompt: |
  You are a professional presentation designer tasked with creating structured PowerPoint outlines. The final deliverable should be formatted as a JSON object. Please ensure that no layouts other than those provided are utilized in the outline.
template: |
  Steps:

  1. Understand the JSON Content:
     Carefully analyze the provided JSON input.
     Identify key sections and subsections.

  2. Generate the Outline:
     Ensure the number of slides matches the specified requirement.
     Maintain a logical flow between slides to enhance understanding.
     Inserting structural layouts properly(only structural slides should use structural layouts) to make the presentation more engaging.
     Thoroughly analyze the content and media types specified in the provided layouts to optimize slide design.

  For each slide, provide:
    A Slide Purpose that concludes the the slide in high level.
    A Layout selected from provided layouts tailored to the slide function, choose layout with proper media type according to the available images.
    Slide Description, which should contain concise descriptions.

  Please provide your output in JSON format.

  Example Output:
  {
     "Opening of the XX": {
        "layout": "opening(media_type)",
        "subsection_keys": [],
        "description": "..."
     },
     "Introduction to the XX": {
        "layout": "layout1(media_type)", # select from given layouts(structural or content)
        "subsection_keys": ["Title of Subsection 1.1", "Title of Subsection 1.2"],
        "description": "..."
    },
    ...,
    "Ending of the XX": {
        "layout": "ending(media_type)",
        "subsection_keys": [],
        "description": "..."
    }
  }

  Input:
  {{ json_content }}

  Number of Slides: {{ num_slides }}
  Image Information:
  {{ image_information }}

  # you can only use the following layouts
  Content Layouts:
  {{ layouts }}
  structural Layouts:
  {{ functional_keys }}

  Output:
jinja_args:
  - num_slides
  - image_information
  - functional_keys
  - layouts
  - json_content
use_model: language
return_json: true
